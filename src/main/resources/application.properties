spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true

#specify default port 8080 or port in PORT variable if specific port is in use
server.port=${PORT:8080}

#spring.jpa.hibernate.ddl-auto
#none: Hibernate will not create or modify database tables.
#validate: Hibernate will validate the schema against the entity classes and mappings, but will not create or modify any tables.
#update: Hibernate will update the schema according to the entity classes and mappings. If a table already exists, Hibernate will modify it to match the new schema. If a table does not exist, Hibernate will create it.
#create: Hibernate will create the schema from scratch, dropping any existing tables and creating new ones.
#create-drop: Hibernate will create the schema from scratch, and drop it when the SessionFactory is closed. This is useful in development and testing environments.