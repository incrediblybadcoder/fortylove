# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - feature/*

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | **/build/**'
      restoreKeys: 'gradle | "$(Agent.OS)"'
      path: '$(System.DefaultWorkingDirectory)/.gradle'
      cacheHitVar: 'GRADLE_CACHE_HIT'
    displayName: 'Cache Gradle dependencies and build directory'

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: "17"
      jdkArchitectureOption: "x64"
      jdkSourceOption: "PreInstalled"
    displayName: "Declare JDK 17"

  - task: Gradle@3
    inputs:
      workingDirectory: ""
      gradleWrapperFile: "gradlew"
      gradleOptions: "-Xmx3072m"
      options: "-Pvaadin.productionMode --stacktrace --info"
      javaHomeOption: "JDKVersion"
      jdkVersionOption: "1.17"
      jdkArchitectureOption: "x64"
      publishJUnitResults: true
      testResultsFiles: "**/TEST-*.xml"
      tasks: "build"
    displayName: "Gradle Build"
    
  - task: netplus-vsextension-heroku@1
    inputs:
      herokuApplicationName: "fortyloveapp"
      herokuApiKey: "$(HEROKU_API_KEY)"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    displayName: "Deploy to Heroku"
