# Pipeline to generate PlantUML diagrams
# Build PNG files from PUML
pool:
  vmImage: 'windows-latest'
trigger:
  branches:
    include:
      - feature/*
  paths:
    include:
      - 'documents/design/*'
workspace:
    clean: all
    
steps:
- checkout: self
  persistCredentials: true
  fetchDepth: 0
- task: UseNode@1
  displayName: Install Node
  inputs:
    version: '6.x'
- task: Npm@1
  displayName: Install Node Plant UML
  inputs:
    command: 'custom'
    customCommand: 'install node-plantuml -g' 

- task: PowerShell@2
  displayName: Print Variables
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "BUILD_SOURCEBRANCHNAME = $Env:BUILD_SOURCEBRANCHNAME"
      Write-Host "USERPROFILE = $Env:USERPROFILE"
      
- task: PowerShell@2
  displayName: Check Out
  inputs:
    targetType: 'inline'
    script: |
            git config --global user.email "jonas.cahenzli@gmail.com"
            git config --global user.name "generate-UML-images-pipeline"
            git branch
            git status
            Write-Host "checkout branch = feature/$Env:BUILD_SOURCEBRANCHNAME"
            git checkout "feature/$Env:BUILD_SOURCEBRANCHNAME"

- task: PowerShell@2
  displayName: Install PlantUML JAR
  inputs:
    targetType: 'inline'
    script: |
      $plantumlVersion = "1.2021.7"
      $plantumlUrl = "https://sourceforge.net/projects/plantuml/files/$plantumlVersion/plantuml.$plantumlVersion.jar/download"
      $plantumlPath = "$Env:USERPROFILE\.plantuml\plantuml.jar"
      if(!(Test-Path -Path $plantumlPath)) {
        New-Item -ItemType Directory -Force -Path $Env:USERPROFILE\.plantuml
        Invoke-WebRequest -Uri $plantumlUrl -OutFile $plantumlPath
      }

- task: PowerShell@2
  displayName: Print PUML File Paths
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Start Printing PUML Files"
      Write-Host "sourceRoot = $Env:Build.SourcesDirectory"
      $sourceRoot = "$Env:Build.SourcesDirectory"
      Get-ChildItem $sourceRoot -Recurse -Filter "*.puml" | foreach {
        Write-Host "$_.FullName"
        Write-Host "1"
      }

- task: PowerShell@2
  displayName: Build Images
  inputs:
    targetType: 'inline'
    script: |
      $sourceRoot = "$Env:Build.SourcesDirectory"
      Get-ChildItem $sourceRoot -Recurse -Filter "*.puml" | foreach {
        $fileWithPath = $_.FullName         
        $png = Join-Path -Path $_.DirectoryName -ChildPath ("{0}.png" -f $_.Basename)
        $execute = "java -jar $plantumlPath generate $fileWithPath -o $png"
        Write-Host "Executing command: $execute"
        Invoke-Expression -Command $execute 
      }


- task: PowerShell@2
  displayName: Check In
  inputs:
    targetType: 'inline'
    script: |
            git add --all
            git commit -m "$Env:BUILD_BUILDNUMBER [skip ci]"
            #git checkout "$Env:BUILD_SOURCEBRANCHNAME"
            #git merge "$Env:BUILD_SOURCEBRANCHNAME" -m "$Env:BUILD_BUILDNUMBER"
            #git branch -d "$Env:BUILD_BUILDNUMBER"
            git push origin  
          
